// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mobile's component filter work  should render all clients 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Mobile
    clients={
      Array [
        Object {
          "balance": 300,
          "id": 1,
          "name": "Виталий",
          "secondName": "Петрович",
          "status": 1,
          "surName": "Новиков",
        },
        Object {
          "balance": 180,
          "id": 2,
          "name": "Александ",
          "secondName": "Юрьевич",
          "status": 1,
          "surName": "Глеб",
        },
        Object {
          "balance": -100,
          "id": 3,
          "name": "Вячеслав",
          "secondName": "Юрьевич",
          "status": 0,
          "surName": "Глеб",
        },
        Object {
          "balance": -100,
          "id": 5,
          "name": "Вячеслав",
          "secondName": "Юрьевич",
          "status": 0,
          "surName": "Глеб",
        },
      ]
    }
    currCompanyName="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="mobile__name"
        >
          Velcom
        </div>,
        <div
          className="mobile__btn-wrap"
        >
          <button
            className="btn"
            onClick={[Function]}
            value="Velcom"
          >
            Velcom
          </button>
          <button
            className="btn"
            onClick={[Function]}
            value="Mts"
          >
            Mts
          </button>
        </div>,
        <div
          className="mobile__filter"
        >
          <button
            className="btn filter-all"
            onClick={[Function]}
            value="all"
          >
            Все
          </button>
          <button
            className="btn filter-active"
            onClick={[Function]}
            value="active"
          >
            Активные
          </button>
          <button
            className="btn filter-unavail"
            onClick={[Function]}
            value="unavail"
          >
            Заблокированные
          </button>
        </div>,
        <table
          className="mobile__clients"
        >
          <thead>
            <tr>
              <td>
                Фамилия
              </td>
              <td>
                Имя
              </td>
              <td>
                Отчетсво
              </td>
              <td>
                Баланс
              </td>
              <td>
                Статус
              </td>
              <td>
                Управление
              </td>
            </tr>
          </thead>
          <tbody>
            <MobileClient
              client={
                Object {
                  "balance": 300,
                  "id": 1,
                  "name": "Виталий",
                  "secondName": "Петрович",
                  "status": 1,
                  "surName": "Новиков",
                }
              }
            />
            <MobileClient
              client={
                Object {
                  "balance": 180,
                  "id": 2,
                  "name": "Александ",
                  "secondName": "Юрьевич",
                  "status": 1,
                  "surName": "Глеб",
                }
              }
            />
            <MobileClient
              client={
                Object {
                  "balance": -100,
                  "id": 3,
                  "name": "Вячеслав",
                  "secondName": "Юрьевич",
                  "status": 0,
                  "surName": "Глеб",
                }
              }
            />
            <MobileClient
              client={
                Object {
                  "balance": -100,
                  "id": 5,
                  "name": "Вячеслав",
                  "secondName": "Юрьевич",
                  "status": 0,
                  "surName": "Глеб",
                }
              }
            />
          </tbody>
        </table>,
        <div
          className="mobile__add"
        >
          <button
            className="btn edit-btn add-client"
            onClick={[Function]}
          >
            Добавить клиента
          </button>
        </div>,
        <div
          className="mobile__form"
        />,
      ],
      "className": "mobile container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Velcom",
          "className": "mobile__name",
        },
        "ref": null,
        "rendered": "Velcom",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn"
              onClick={[Function]}
              value="Velcom"
            >
              Velcom
            </button>,
            <button
              className="btn"
              onClick={[Function]}
              value="Mts"
            >
              Mts
            </button>,
          ],
          "className": "mobile__btn-wrap",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Velcom",
              "className": "btn",
              "onClick": [Function],
              "value": "Velcom",
            },
            "ref": null,
            "rendered": "Velcom",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Mts",
              "className": "btn",
              "onClick": [Function],
              "value": "Mts",
            },
            "ref": null,
            "rendered": "Mts",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn filter-all"
              onClick={[Function]}
              value="all"
            >
              Все
            </button>,
            <button
              className="btn filter-active"
              onClick={[Function]}
              value="active"
            >
              Активные
            </button>,
            <button
              className="btn filter-unavail"
              onClick={[Function]}
              value="unavail"
            >
              Заблокированные
            </button>,
          ],
          "className": "mobile__filter",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Все",
              "className": "btn filter-all",
              "onClick": [Function],
              "value": "all",
            },
            "ref": null,
            "rendered": "Все",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Активные",
              "className": "btn filter-active",
              "onClick": [Function],
              "value": "active",
            },
            "ref": null,
            "rendered": "Активные",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Заблокированные",
              "className": "btn filter-unavail",
              "onClick": [Function],
              "value": "unavail",
            },
            "ref": null,
            "rendered": "Заблокированные",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>
            </thead>,
            <tbody>
              <MobileClient
                client={
                  Object {
                    "balance": 300,
                    "id": 1,
                    "name": "Виталий",
                    "secondName": "Петрович",
                    "status": 1,
                    "surName": "Новиков",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": 180,
                    "id": 2,
                    "name": "Александ",
                    "secondName": "Юрьевич",
                    "status": 1,
                    "surName": "Глеб",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 3,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 5,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
            </tbody>,
          ],
          "className": "mobile__clients",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    Фамилия
                  </td>,
                  <td>
                    Имя
                  </td>,
                  <td>
                    Отчетсво
                  </td>,
                  <td>
                    Баланс
                  </td>,
                  <td>
                    Статус
                  </td>,
                  <td>
                    Управление
                  </td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчетсво",
                  },
                  "ref": null,
                  "rendered": "Отчетсво",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Управление",
                  },
                  "ref": null,
                  "rendered": "Управление",
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  client={
                    Object {
                      "balance": 300,
                      "id": 1,
                      "name": "Виталий",
                      "secondName": "Петрович",
                      "status": 1,
                      "surName": "Новиков",
                    }
                  }
                />,
                <MobileClient
                  client={
                    Object {
                      "balance": 180,
                      "id": 2,
                      "name": "Александ",
                      "secondName": "Юрьевич",
                      "status": 1,
                      "surName": "Глеб",
                    }
                  }
                />,
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 3,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />,
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 5,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": 300,
                    "id": 1,
                    "name": "Виталий",
                    "secondName": "Петрович",
                    "status": 1,
                    "surName": "Новиков",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": 180,
                    "id": 2,
                    "name": "Александ",
                    "secondName": "Юрьевич",
                    "status": 1,
                    "surName": "Глеб",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": -100,
                    "id": 3,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": -100,
                    "id": 5,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn edit-btn add-client"
            onClick={[Function]}
          >
            Добавить клиента
          </button>,
          "className": "mobile__add",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Добавить клиента",
            "className": "btn edit-btn add-client",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Добавить клиента",
          "type": "button",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            false,
          ],
          "className": "mobile__form",
        },
        "ref": null,
        "rendered": Array [
          false,
          false,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="mobile__name"
          >
            Velcom
          </div>,
          <div
            className="mobile__btn-wrap"
          >
            <button
              className="btn"
              onClick={[Function]}
              value="Velcom"
            >
              Velcom
            </button>
            <button
              className="btn"
              onClick={[Function]}
              value="Mts"
            >
              Mts
            </button>
          </div>,
          <div
            className="mobile__filter"
          >
            <button
              className="btn filter-all"
              onClick={[Function]}
              value="all"
            >
              Все
            </button>
            <button
              className="btn filter-active"
              onClick={[Function]}
              value="active"
            >
              Активные
            </button>
            <button
              className="btn filter-unavail"
              onClick={[Function]}
              value="unavail"
            >
              Заблокированные
            </button>
          </div>,
          <table
            className="mobile__clients"
          >
            <thead>
              <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>
            </thead>
            <tbody>
              <MobileClient
                client={
                  Object {
                    "balance": 300,
                    "id": 1,
                    "name": "Виталий",
                    "secondName": "Петрович",
                    "status": 1,
                    "surName": "Новиков",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": 180,
                    "id": 2,
                    "name": "Александ",
                    "secondName": "Юрьевич",
                    "status": 1,
                    "surName": "Глеб",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 3,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 5,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
            </tbody>
          </table>,
          <div
            className="mobile__add"
          >
            <button
              className="btn edit-btn add-client"
              onClick={[Function]}
            >
              Добавить клиента
            </button>
          </div>,
          <div
            className="mobile__form"
          />,
        ],
        "className": "mobile container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Velcom",
            "className": "mobile__name",
          },
          "ref": null,
          "rendered": "Velcom",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn"
                onClick={[Function]}
                value="Velcom"
              >
                Velcom
              </button>,
              <button
                className="btn"
                onClick={[Function]}
                value="Mts"
              >
                Mts
              </button>,
            ],
            "className": "mobile__btn-wrap",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Velcom",
                "className": "btn",
                "onClick": [Function],
                "value": "Velcom",
              },
              "ref": null,
              "rendered": "Velcom",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Mts",
                "className": "btn",
                "onClick": [Function],
                "value": "Mts",
              },
              "ref": null,
              "rendered": "Mts",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn filter-all"
                onClick={[Function]}
                value="all"
              >
                Все
              </button>,
              <button
                className="btn filter-active"
                onClick={[Function]}
                value="active"
              >
                Активные
              </button>,
              <button
                className="btn filter-unavail"
                onClick={[Function]}
                value="unavail"
              >
                Заблокированные
              </button>,
            ],
            "className": "mobile__filter",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Все",
                "className": "btn filter-all",
                "onClick": [Function],
                "value": "all",
              },
              "ref": null,
              "rendered": "Все",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Активные",
                "className": "btn filter-active",
                "onClick": [Function],
                "value": "active",
              },
              "ref": null,
              "rendered": "Активные",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Заблокированные",
                "className": "btn filter-unavail",
                "onClick": [Function],
                "value": "unavail",
              },
              "ref": null,
              "rendered": "Заблокированные",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr>
                  <td>
                    Фамилия
                  </td>
                  <td>
                    Имя
                  </td>
                  <td>
                    Отчетсво
                  </td>
                  <td>
                    Баланс
                  </td>
                  <td>
                    Статус
                  </td>
                  <td>
                    Управление
                  </td>
                </tr>
              </thead>,
              <tbody>
                <MobileClient
                  client={
                    Object {
                      "balance": 300,
                      "id": 1,
                      "name": "Виталий",
                      "secondName": "Петрович",
                      "status": 1,
                      "surName": "Новиков",
                    }
                  }
                />
                <MobileClient
                  client={
                    Object {
                      "balance": 180,
                      "id": 2,
                      "name": "Александ",
                      "secondName": "Юрьевич",
                      "status": 1,
                      "surName": "Глеб",
                    }
                  }
                />
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 3,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 5,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "mobile__clients",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <td>
                    Фамилия
                  </td>
                  <td>
                    Имя
                  </td>
                  <td>
                    Отчетсво
                  </td>
                  <td>
                    Баланс
                  </td>
                  <td>
                    Статус
                  </td>
                  <td>
                    Управление
                  </td>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      Фамилия
                    </td>,
                    <td>
                      Имя
                    </td>,
                    <td>
                      Отчетсво
                    </td>,
                    <td>
                      Баланс
                    </td>,
                    <td>
                      Статус
                    </td>,
                    <td>
                      Управление
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчетсво",
                    },
                    "ref": null,
                    "rendered": "Отчетсво",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Управление",
                    },
                    "ref": null,
                    "rendered": "Управление",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    client={
                      Object {
                        "balance": 300,
                        "id": 1,
                        "name": "Виталий",
                        "secondName": "Петрович",
                        "status": 1,
                        "surName": "Новиков",
                      }
                    }
                  />,
                  <MobileClient
                    client={
                      Object {
                        "balance": 180,
                        "id": 2,
                        "name": "Александ",
                        "secondName": "Юрьевич",
                        "status": 1,
                        "surName": "Глеб",
                      }
                    }
                  />,
                  <MobileClient
                    client={
                      Object {
                        "balance": -100,
                        "id": 3,
                        "name": "Вячеслав",
                        "secondName": "Юрьевич",
                        "status": 0,
                        "surName": "Глеб",
                      }
                    }
                  />,
                  <MobileClient
                    client={
                      Object {
                        "balance": -100,
                        "id": 5,
                        "name": "Вячеслав",
                        "secondName": "Юрьевич",
                        "status": 0,
                        "surName": "Глеб",
                      }
                    }
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": 300,
                      "id": 1,
                      "name": "Виталий",
                      "secondName": "Петрович",
                      "status": 1,
                      "surName": "Новиков",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": 180,
                      "id": 2,
                      "name": "Александ",
                      "secondName": "Юрьевич",
                      "status": 1,
                      "surName": "Глеб",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": -100,
                      "id": 3,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": -100,
                      "id": 5,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn edit-btn add-client"
              onClick={[Function]}
            >
              Добавить клиента
            </button>,
            "className": "mobile__add",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Добавить клиента",
              "className": "btn edit-btn add-client",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Добавить клиента",
            "type": "button",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              false,
            ],
            "className": "mobile__form",
          },
          "ref": null,
          "rendered": Array [
            false,
            false,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Mobile's component filter work  should render only clients with active status 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Mobile
    clients={
      Array [
        Object {
          "balance": 300,
          "id": 1,
          "name": "Виталий",
          "secondName": "Петрович",
          "status": 1,
          "surName": "Новиков",
        },
        Object {
          "balance": 180,
          "id": 2,
          "name": "Александ",
          "secondName": "Юрьевич",
          "status": 1,
          "surName": "Глеб",
        },
        Object {
          "balance": -100,
          "id": 3,
          "name": "Вячеслав",
          "secondName": "Юрьевич",
          "status": 0,
          "surName": "Глеб",
        },
        Object {
          "balance": -100,
          "id": 5,
          "name": "Вячеслав",
          "secondName": "Юрьевич",
          "status": 0,
          "surName": "Глеб",
        },
      ]
    }
    currCompanyName="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="mobile__name"
        >
          Velcom
        </div>,
        <div
          className="mobile__btn-wrap"
        >
          <button
            className="btn"
            onClick={[Function]}
            value="Velcom"
          >
            Velcom
          </button>
          <button
            className="btn"
            onClick={[Function]}
            value="Mts"
          >
            Mts
          </button>
        </div>,
        <div
          className="mobile__filter"
        >
          <button
            className="btn filter-all"
            onClick={[Function]}
            value="all"
          >
            Все
          </button>
          <button
            className="btn filter-active"
            onClick={[Function]}
            value="active"
          >
            Активные
          </button>
          <button
            className="btn filter-unavail"
            onClick={[Function]}
            value="unavail"
          >
            Заблокированные
          </button>
        </div>,
        <table
          className="mobile__clients"
        >
          <thead>
            <tr>
              <td>
                Фамилия
              </td>
              <td>
                Имя
              </td>
              <td>
                Отчетсво
              </td>
              <td>
                Баланс
              </td>
              <td>
                Статус
              </td>
              <td>
                Управление
              </td>
            </tr>
          </thead>
          <tbody>
            <MobileClient
              client={
                Object {
                  "balance": 300,
                  "id": 1,
                  "name": "Виталий",
                  "secondName": "Петрович",
                  "status": 1,
                  "surName": "Новиков",
                }
              }
            />
            <MobileClient
              client={
                Object {
                  "balance": 180,
                  "id": 2,
                  "name": "Александ",
                  "secondName": "Юрьевич",
                  "status": 1,
                  "surName": "Глеб",
                }
              }
            />
          </tbody>
        </table>,
        <div
          className="mobile__add"
        >
          <button
            className="btn edit-btn add-client"
            onClick={[Function]}
          >
            Добавить клиента
          </button>
        </div>,
        <div
          className="mobile__form"
        />,
      ],
      "className": "mobile container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Velcom",
          "className": "mobile__name",
        },
        "ref": null,
        "rendered": "Velcom",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn"
              onClick={[Function]}
              value="Velcom"
            >
              Velcom
            </button>,
            <button
              className="btn"
              onClick={[Function]}
              value="Mts"
            >
              Mts
            </button>,
          ],
          "className": "mobile__btn-wrap",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Velcom",
              "className": "btn",
              "onClick": [Function],
              "value": "Velcom",
            },
            "ref": null,
            "rendered": "Velcom",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Mts",
              "className": "btn",
              "onClick": [Function],
              "value": "Mts",
            },
            "ref": null,
            "rendered": "Mts",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn filter-all"
              onClick={[Function]}
              value="all"
            >
              Все
            </button>,
            <button
              className="btn filter-active"
              onClick={[Function]}
              value="active"
            >
              Активные
            </button>,
            <button
              className="btn filter-unavail"
              onClick={[Function]}
              value="unavail"
            >
              Заблокированные
            </button>,
          ],
          "className": "mobile__filter",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Все",
              "className": "btn filter-all",
              "onClick": [Function],
              "value": "all",
            },
            "ref": null,
            "rendered": "Все",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Активные",
              "className": "btn filter-active",
              "onClick": [Function],
              "value": "active",
            },
            "ref": null,
            "rendered": "Активные",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Заблокированные",
              "className": "btn filter-unavail",
              "onClick": [Function],
              "value": "unavail",
            },
            "ref": null,
            "rendered": "Заблокированные",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>
            </thead>,
            <tbody>
              <MobileClient
                client={
                  Object {
                    "balance": 300,
                    "id": 1,
                    "name": "Виталий",
                    "secondName": "Петрович",
                    "status": 1,
                    "surName": "Новиков",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": 180,
                    "id": 2,
                    "name": "Александ",
                    "secondName": "Юрьевич",
                    "status": 1,
                    "surName": "Глеб",
                  }
                }
              />
            </tbody>,
          ],
          "className": "mobile__clients",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    Фамилия
                  </td>,
                  <td>
                    Имя
                  </td>,
                  <td>
                    Отчетсво
                  </td>,
                  <td>
                    Баланс
                  </td>,
                  <td>
                    Статус
                  </td>,
                  <td>
                    Управление
                  </td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчетсво",
                  },
                  "ref": null,
                  "rendered": "Отчетсво",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Управление",
                  },
                  "ref": null,
                  "rendered": "Управление",
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  client={
                    Object {
                      "balance": 300,
                      "id": 1,
                      "name": "Виталий",
                      "secondName": "Петрович",
                      "status": 1,
                      "surName": "Новиков",
                    }
                  }
                />,
                <MobileClient
                  client={
                    Object {
                      "balance": 180,
                      "id": 2,
                      "name": "Александ",
                      "secondName": "Юрьевич",
                      "status": 1,
                      "surName": "Глеб",
                    }
                  }
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": 300,
                    "id": 1,
                    "name": "Виталий",
                    "secondName": "Петрович",
                    "status": 1,
                    "surName": "Новиков",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": 180,
                    "id": 2,
                    "name": "Александ",
                    "secondName": "Юрьевич",
                    "status": 1,
                    "surName": "Глеб",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn edit-btn add-client"
            onClick={[Function]}
          >
            Добавить клиента
          </button>,
          "className": "mobile__add",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Добавить клиента",
            "className": "btn edit-btn add-client",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Добавить клиента",
          "type": "button",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            false,
          ],
          "className": "mobile__form",
        },
        "ref": null,
        "rendered": Array [
          false,
          false,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="mobile__name"
          >
            Velcom
          </div>,
          <div
            className="mobile__btn-wrap"
          >
            <button
              className="btn"
              onClick={[Function]}
              value="Velcom"
            >
              Velcom
            </button>
            <button
              className="btn"
              onClick={[Function]}
              value="Mts"
            >
              Mts
            </button>
          </div>,
          <div
            className="mobile__filter"
          >
            <button
              className="btn filter-all"
              onClick={[Function]}
              value="all"
            >
              Все
            </button>
            <button
              className="btn filter-active"
              onClick={[Function]}
              value="active"
            >
              Активные
            </button>
            <button
              className="btn filter-unavail"
              onClick={[Function]}
              value="unavail"
            >
              Заблокированные
            </button>
          </div>,
          <table
            className="mobile__clients"
          >
            <thead>
              <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>
            </thead>
            <tbody>
              <MobileClient
                client={
                  Object {
                    "balance": 300,
                    "id": 1,
                    "name": "Виталий",
                    "secondName": "Петрович",
                    "status": 1,
                    "surName": "Новиков",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": 180,
                    "id": 2,
                    "name": "Александ",
                    "secondName": "Юрьевич",
                    "status": 1,
                    "surName": "Глеб",
                  }
                }
              />
            </tbody>
          </table>,
          <div
            className="mobile__add"
          >
            <button
              className="btn edit-btn add-client"
              onClick={[Function]}
            >
              Добавить клиента
            </button>
          </div>,
          <div
            className="mobile__form"
          />,
        ],
        "className": "mobile container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Velcom",
            "className": "mobile__name",
          },
          "ref": null,
          "rendered": "Velcom",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn"
                onClick={[Function]}
                value="Velcom"
              >
                Velcom
              </button>,
              <button
                className="btn"
                onClick={[Function]}
                value="Mts"
              >
                Mts
              </button>,
            ],
            "className": "mobile__btn-wrap",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Velcom",
                "className": "btn",
                "onClick": [Function],
                "value": "Velcom",
              },
              "ref": null,
              "rendered": "Velcom",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Mts",
                "className": "btn",
                "onClick": [Function],
                "value": "Mts",
              },
              "ref": null,
              "rendered": "Mts",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn filter-all"
                onClick={[Function]}
                value="all"
              >
                Все
              </button>,
              <button
                className="btn filter-active"
                onClick={[Function]}
                value="active"
              >
                Активные
              </button>,
              <button
                className="btn filter-unavail"
                onClick={[Function]}
                value="unavail"
              >
                Заблокированные
              </button>,
            ],
            "className": "mobile__filter",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Все",
                "className": "btn filter-all",
                "onClick": [Function],
                "value": "all",
              },
              "ref": null,
              "rendered": "Все",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Активные",
                "className": "btn filter-active",
                "onClick": [Function],
                "value": "active",
              },
              "ref": null,
              "rendered": "Активные",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Заблокированные",
                "className": "btn filter-unavail",
                "onClick": [Function],
                "value": "unavail",
              },
              "ref": null,
              "rendered": "Заблокированные",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr>
                  <td>
                    Фамилия
                  </td>
                  <td>
                    Имя
                  </td>
                  <td>
                    Отчетсво
                  </td>
                  <td>
                    Баланс
                  </td>
                  <td>
                    Статус
                  </td>
                  <td>
                    Управление
                  </td>
                </tr>
              </thead>,
              <tbody>
                <MobileClient
                  client={
                    Object {
                      "balance": 300,
                      "id": 1,
                      "name": "Виталий",
                      "secondName": "Петрович",
                      "status": 1,
                      "surName": "Новиков",
                    }
                  }
                />
                <MobileClient
                  client={
                    Object {
                      "balance": 180,
                      "id": 2,
                      "name": "Александ",
                      "secondName": "Юрьевич",
                      "status": 1,
                      "surName": "Глеб",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "mobile__clients",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <td>
                    Фамилия
                  </td>
                  <td>
                    Имя
                  </td>
                  <td>
                    Отчетсво
                  </td>
                  <td>
                    Баланс
                  </td>
                  <td>
                    Статус
                  </td>
                  <td>
                    Управление
                  </td>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      Фамилия
                    </td>,
                    <td>
                      Имя
                    </td>,
                    <td>
                      Отчетсво
                    </td>,
                    <td>
                      Баланс
                    </td>,
                    <td>
                      Статус
                    </td>,
                    <td>
                      Управление
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчетсво",
                    },
                    "ref": null,
                    "rendered": "Отчетсво",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Управление",
                    },
                    "ref": null,
                    "rendered": "Управление",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    client={
                      Object {
                        "balance": 300,
                        "id": 1,
                        "name": "Виталий",
                        "secondName": "Петрович",
                        "status": 1,
                        "surName": "Новиков",
                      }
                    }
                  />,
                  <MobileClient
                    client={
                      Object {
                        "balance": 180,
                        "id": 2,
                        "name": "Александ",
                        "secondName": "Юрьевич",
                        "status": 1,
                        "surName": "Глеб",
                      }
                    }
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": 300,
                      "id": 1,
                      "name": "Виталий",
                      "secondName": "Петрович",
                      "status": 1,
                      "surName": "Новиков",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": 180,
                      "id": 2,
                      "name": "Александ",
                      "secondName": "Юрьевич",
                      "status": 1,
                      "surName": "Глеб",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn edit-btn add-client"
              onClick={[Function]}
            >
              Добавить клиента
            </button>,
            "className": "mobile__add",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Добавить клиента",
              "className": "btn edit-btn add-client",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Добавить клиента",
            "type": "button",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              false,
            ],
            "className": "mobile__form",
          },
          "ref": null,
          "rendered": Array [
            false,
            false,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Mobile's component filter work  should render only clients with unavail status 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Mobile
    clients={
      Array [
        Object {
          "balance": 300,
          "id": 1,
          "name": "Виталий",
          "secondName": "Петрович",
          "status": 1,
          "surName": "Новиков",
        },
        Object {
          "balance": 180,
          "id": 2,
          "name": "Александ",
          "secondName": "Юрьевич",
          "status": 1,
          "surName": "Глеб",
        },
        Object {
          "balance": -100,
          "id": 3,
          "name": "Вячеслав",
          "secondName": "Юрьевич",
          "status": 0,
          "surName": "Глеб",
        },
        Object {
          "balance": -100,
          "id": 5,
          "name": "Вячеслав",
          "secondName": "Юрьевич",
          "status": 0,
          "surName": "Глеб",
        },
      ]
    }
    currCompanyName="Velcom"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="mobile__name"
        >
          Velcom
        </div>,
        <div
          className="mobile__btn-wrap"
        >
          <button
            className="btn"
            onClick={[Function]}
            value="Velcom"
          >
            Velcom
          </button>
          <button
            className="btn"
            onClick={[Function]}
            value="Mts"
          >
            Mts
          </button>
        </div>,
        <div
          className="mobile__filter"
        >
          <button
            className="btn filter-all"
            onClick={[Function]}
            value="all"
          >
            Все
          </button>
          <button
            className="btn filter-active"
            onClick={[Function]}
            value="active"
          >
            Активные
          </button>
          <button
            className="btn filter-unavail"
            onClick={[Function]}
            value="unavail"
          >
            Заблокированные
          </button>
        </div>,
        <table
          className="mobile__clients"
        >
          <thead>
            <tr>
              <td>
                Фамилия
              </td>
              <td>
                Имя
              </td>
              <td>
                Отчетсво
              </td>
              <td>
                Баланс
              </td>
              <td>
                Статус
              </td>
              <td>
                Управление
              </td>
            </tr>
          </thead>
          <tbody>
            <MobileClient
              client={
                Object {
                  "balance": -100,
                  "id": 3,
                  "name": "Вячеслав",
                  "secondName": "Юрьевич",
                  "status": 0,
                  "surName": "Глеб",
                }
              }
            />
            <MobileClient
              client={
                Object {
                  "balance": -100,
                  "id": 5,
                  "name": "Вячеслав",
                  "secondName": "Юрьевич",
                  "status": 0,
                  "surName": "Глеб",
                }
              }
            />
          </tbody>
        </table>,
        <div
          className="mobile__add"
        >
          <button
            className="btn edit-btn add-client"
            onClick={[Function]}
          >
            Добавить клиента
          </button>
        </div>,
        <div
          className="mobile__form"
        />,
      ],
      "className": "mobile container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Velcom",
          "className": "mobile__name",
        },
        "ref": null,
        "rendered": "Velcom",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn"
              onClick={[Function]}
              value="Velcom"
            >
              Velcom
            </button>,
            <button
              className="btn"
              onClick={[Function]}
              value="Mts"
            >
              Mts
            </button>,
          ],
          "className": "mobile__btn-wrap",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Velcom",
              "className": "btn",
              "onClick": [Function],
              "value": "Velcom",
            },
            "ref": null,
            "rendered": "Velcom",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Mts",
              "className": "btn",
              "onClick": [Function],
              "value": "Mts",
            },
            "ref": null,
            "rendered": "Mts",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn filter-all"
              onClick={[Function]}
              value="all"
            >
              Все
            </button>,
            <button
              className="btn filter-active"
              onClick={[Function]}
              value="active"
            >
              Активные
            </button>,
            <button
              className="btn filter-unavail"
              onClick={[Function]}
              value="unavail"
            >
              Заблокированные
            </button>,
          ],
          "className": "mobile__filter",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Все",
              "className": "btn filter-all",
              "onClick": [Function],
              "value": "all",
            },
            "ref": null,
            "rendered": "Все",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Активные",
              "className": "btn filter-active",
              "onClick": [Function],
              "value": "active",
            },
            "ref": null,
            "rendered": "Активные",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Заблокированные",
              "className": "btn filter-unavail",
              "onClick": [Function],
              "value": "unavail",
            },
            "ref": null,
            "rendered": "Заблокированные",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>
            </thead>,
            <tbody>
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 3,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 5,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
            </tbody>,
          ],
          "className": "mobile__clients",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    Фамилия
                  </td>,
                  <td>
                    Имя
                  </td>,
                  <td>
                    Отчетсво
                  </td>,
                  <td>
                    Баланс
                  </td>,
                  <td>
                    Статус
                  </td>,
                  <td>
                    Управление
                  </td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Фамилия",
                  },
                  "ref": null,
                  "rendered": "Фамилия",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Имя",
                  },
                  "ref": null,
                  "rendered": "Имя",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Отчетсво",
                  },
                  "ref": null,
                  "rendered": "Отчетсво",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Баланс",
                  },
                  "ref": null,
                  "rendered": "Баланс",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Статус",
                  },
                  "ref": null,
                  "rendered": "Статус",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Управление",
                  },
                  "ref": null,
                  "rendered": "Управление",
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 3,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />,
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 5,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "3",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": -100,
                    "id": 3,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "5",
                "nodeType": "class",
                "props": Object {
                  "client": Object {
                    "balance": -100,
                    "id": 5,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn edit-btn add-client"
            onClick={[Function]}
          >
            Добавить клиента
          </button>,
          "className": "mobile__add",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Добавить клиента",
            "className": "btn edit-btn add-client",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Добавить клиента",
          "type": "button",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            false,
          ],
          "className": "mobile__form",
        },
        "ref": null,
        "rendered": Array [
          false,
          false,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="mobile__name"
          >
            Velcom
          </div>,
          <div
            className="mobile__btn-wrap"
          >
            <button
              className="btn"
              onClick={[Function]}
              value="Velcom"
            >
              Velcom
            </button>
            <button
              className="btn"
              onClick={[Function]}
              value="Mts"
            >
              Mts
            </button>
          </div>,
          <div
            className="mobile__filter"
          >
            <button
              className="btn filter-all"
              onClick={[Function]}
              value="all"
            >
              Все
            </button>
            <button
              className="btn filter-active"
              onClick={[Function]}
              value="active"
            >
              Активные
            </button>
            <button
              className="btn filter-unavail"
              onClick={[Function]}
              value="unavail"
            >
              Заблокированные
            </button>
          </div>,
          <table
            className="mobile__clients"
          >
            <thead>
              <tr>
                <td>
                  Фамилия
                </td>
                <td>
                  Имя
                </td>
                <td>
                  Отчетсво
                </td>
                <td>
                  Баланс
                </td>
                <td>
                  Статус
                </td>
                <td>
                  Управление
                </td>
              </tr>
            </thead>
            <tbody>
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 3,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
              <MobileClient
                client={
                  Object {
                    "balance": -100,
                    "id": 5,
                    "name": "Вячеслав",
                    "secondName": "Юрьевич",
                    "status": 0,
                    "surName": "Глеб",
                  }
                }
              />
            </tbody>
          </table>,
          <div
            className="mobile__add"
          >
            <button
              className="btn edit-btn add-client"
              onClick={[Function]}
            >
              Добавить клиента
            </button>
          </div>,
          <div
            className="mobile__form"
          />,
        ],
        "className": "mobile container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Velcom",
            "className": "mobile__name",
          },
          "ref": null,
          "rendered": "Velcom",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn"
                onClick={[Function]}
                value="Velcom"
              >
                Velcom
              </button>,
              <button
                className="btn"
                onClick={[Function]}
                value="Mts"
              >
                Mts
              </button>,
            ],
            "className": "mobile__btn-wrap",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Velcom",
                "className": "btn",
                "onClick": [Function],
                "value": "Velcom",
              },
              "ref": null,
              "rendered": "Velcom",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Mts",
                "className": "btn",
                "onClick": [Function],
                "value": "Mts",
              },
              "ref": null,
              "rendered": "Mts",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn filter-all"
                onClick={[Function]}
                value="all"
              >
                Все
              </button>,
              <button
                className="btn filter-active"
                onClick={[Function]}
                value="active"
              >
                Активные
              </button>,
              <button
                className="btn filter-unavail"
                onClick={[Function]}
                value="unavail"
              >
                Заблокированные
              </button>,
            ],
            "className": "mobile__filter",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Все",
                "className": "btn filter-all",
                "onClick": [Function],
                "value": "all",
              },
              "ref": null,
              "rendered": "Все",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Активные",
                "className": "btn filter-active",
                "onClick": [Function],
                "value": "active",
              },
              "ref": null,
              "rendered": "Активные",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Заблокированные",
                "className": "btn filter-unavail",
                "onClick": [Function],
                "value": "unavail",
              },
              "ref": null,
              "rendered": "Заблокированные",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr>
                  <td>
                    Фамилия
                  </td>
                  <td>
                    Имя
                  </td>
                  <td>
                    Отчетсво
                  </td>
                  <td>
                    Баланс
                  </td>
                  <td>
                    Статус
                  </td>
                  <td>
                    Управление
                  </td>
                </tr>
              </thead>,
              <tbody>
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 3,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />
                <MobileClient
                  client={
                    Object {
                      "balance": -100,
                      "id": 5,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    }
                  }
                />
              </tbody>,
            ],
            "className": "mobile__clients",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <td>
                    Фамилия
                  </td>
                  <td>
                    Имя
                  </td>
                  <td>
                    Отчетсво
                  </td>
                  <td>
                    Баланс
                  </td>
                  <td>
                    Статус
                  </td>
                  <td>
                    Управление
                  </td>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      Фамилия
                    </td>,
                    <td>
                      Имя
                    </td>,
                    <td>
                      Отчетсво
                    </td>,
                    <td>
                      Баланс
                    </td>,
                    <td>
                      Статус
                    </td>,
                    <td>
                      Управление
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Фамилия",
                    },
                    "ref": null,
                    "rendered": "Фамилия",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Имя",
                    },
                    "ref": null,
                    "rendered": "Имя",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Отчетсво",
                    },
                    "ref": null,
                    "rendered": "Отчетсво",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Баланс",
                    },
                    "ref": null,
                    "rendered": "Баланс",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Статус",
                    },
                    "ref": null,
                    "rendered": "Статус",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Управление",
                    },
                    "ref": null,
                    "rendered": "Управление",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MobileClient
                    client={
                      Object {
                        "balance": -100,
                        "id": 3,
                        "name": "Вячеслав",
                        "secondName": "Юрьевич",
                        "status": 0,
                        "surName": "Глеб",
                      }
                    }
                  />,
                  <MobileClient
                    client={
                      Object {
                        "balance": -100,
                        "id": 5,
                        "name": "Вячеслав",
                        "secondName": "Юрьевич",
                        "status": 0,
                        "surName": "Глеб",
                      }
                    }
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "3",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": -100,
                      "id": 3,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "5",
                  "nodeType": "class",
                  "props": Object {
                    "client": Object {
                      "balance": -100,
                      "id": 5,
                      "name": "Вячеслав",
                      "secondName": "Юрьевич",
                      "status": 0,
                      "surName": "Глеб",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn edit-btn add-client"
              onClick={[Function]}
            >
              Добавить клиента
            </button>,
            "className": "mobile__add",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Добавить клиента",
              "className": "btn edit-btn add-client",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Добавить клиента",
            "type": "button",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              false,
            ],
            "className": "mobile__form",
          },
          "ref": null,
          "rendered": Array [
            false,
            false,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
